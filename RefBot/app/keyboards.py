# keyboards.py

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from app.db import get_payeer_id

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª
subscription_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="‚òëÔ∏è –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url="https://t.me/EMRN_CHANNEL/3")],
        [InlineKeyboardButton(text="‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data='sub_channel')]
    ]
)

# –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é —Å ReplyKeyboardMarkup
def create_main_menu_keyboard():
    builder = ReplyKeyboardBuilder()
    builder.button(text="üíº –ü–†–û–§–ò–õ–¨")
    builder.button(text="üéÅ –ë–û–ù–£–°")
    builder.button(text="‚ÑπÔ∏è –û –ü–†–û–ï–ö–¢–ï")
    builder.button(text="üí∞ –í–´–í–û–î")
    builder.button(text="üßë‚Äçü§ù‚Äçüßë –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê")
    builder.adjust(2)  # –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ 2 —Å—Ç–æ–ª–±—Ü–∞
    return builder.as_markup(resize_keyboard=True)

main_menu_keyboard = create_main_menu_keyboard()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –±–æ–Ω—É—Å–∞
withdraw_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–í—ã–≤–µ—Å—Ç–∏ –±–æ–Ω—É—Å", callback_data='get_bonus')],
    ]
)

# –°–æ–∑–¥–∞–µ–º InlineKeyboardMarkup —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º InlineKeyboardBuilder
def create_admin_keyboard():
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –ó–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–≤–æ–¥", callback_data='view_withdrawals')
    builder.button(text="‚úÖ –†–∞—Å—Å—ã–ª–∫–∞", callback_data='start_mailing')
    builder.adjust(1)
    return builder.as_markup()

admin_menu_keyboard = create_admin_keyboard()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏
def create_mailing_confirmation_keyboard():
    builder = InlineKeyboardBuilder()
    builder.button(text="–ù–∞—á–∞—Ç—å", callback_data='confirm_mailing')
    builder.button(text="–û—Ç–º–µ–Ω–∞", callback_data='cancel_mailing')
    builder.adjust(2)
    return builder.as_markup()

mailing_confirmation_keyboard = create_mailing_confirmation_keyboard()

async def create_withdrawal_keyboard(withdrawals):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤."""
    builder = InlineKeyboardBuilder()

    for withdrawal in withdrawals:
        user_id = withdrawal['user_id']
        total_amount = withdrawal['total_amount']
        payeer_id = await get_payeer_id(user_id)

        if payeer_id:
            button_pay = InlineKeyboardButton(
                text=f"–û–ø–ª–∞—Ç–∏—Ç—å {total_amount} —Ä—É–±.",
                callback_data=f"pay_{user_id}_{total_amount}"
            )
            button_delete = InlineKeyboardButton(
                text="–£–¥–∞–ª–∏—Ç—å",
                callback_data=f"delete_user_{user_id}"
            )
            builder.row(button_pay, button_delete)
            builder.row(InlineKeyboardButton(
                text=f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id}",
                callback_data=f"info_{user_id}"
            ))
            builder.row(InlineKeyboardButton(
                text=f"–ö–æ—à–µ–ª–µ–∫: {payeer_id}",
                callback_data=f"info_{user_id}"
            ))
        else:
            # –ï—Å–ª–∏ –∫–æ—à–µ–ª—å–∫–∞ –Ω–µ—Ç, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            button = InlineKeyboardButton(
                text=f"–û—à–∏–±–∫–∞: –∫–æ—à–µ–ª–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è ID {user_id}",
                callback_data=f"withdraw_{user_id}_{total_amount}"
            )
            builder.add(button)

    return builder.as_markup()
